{"version":3,"sources":["App.js","index.js"],"names":["App","useState","quotes","setQuotes","randomQuote","setRandomQuote","color","setColor","useEffect","fetch","then","response","json","data","randomIndex","Math","round","random","length","className","style","background","text","author","target","href","onClick","colors","randomColorIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAiDeA,MA9Cf,WACE,MAA4BC,mBAAS,CAAC,KAAtC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAsCF,qBAAtC,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA0BJ,mBAAS,CAAC,YAApC,mBAAOK,EAAP,KAAcC,EAAd,KAsBA,OApBAC,qBAAU,WACRC,MAAM,+BACLC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLV,EAAUU,GACV,IAAIC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,QAClDb,EAAeQ,EAAKC,SAErB,IAaD,qBAAKK,UAAU,UAAUC,MAAO,CAACC,WAAYf,GAA7C,SACA,sBAAKa,UAAU,MAAf,UACKf,EACC,sBAAKe,UAAU,iBAAf,UACE,qBAAKC,MAAO,CAACd,MAAOA,GAApB,cAA8BF,EAAYkB,KAA1C,OACA,oBAAGF,MAAO,CAACd,MAAOA,GAAQa,UAAU,SAApC,eAAgDf,EAAYmB,QAAU,uBAErE,4CACJ,sBAAKJ,UAAU,UAAf,UACE,sBAAKA,UAAU,gBAAf,UACG,mBAAGK,OAAO,SAASJ,MAAO,CAACC,WAAYf,GAAQa,UAAU,kBAAkBM,KAAK,oCAAhF,SAAoH,mBAAGN,UAAU,oBACjI,mBAAGK,OAAO,SAASJ,MAAO,CAACC,WAAYf,GAAQa,UAAU,kBAAkBM,KAAK,gCAAhF,SAAgH,mBAAGN,UAAU,sBAEhI,wBAAQC,MAAO,CAACC,WAAYf,GAAQa,UAAU,gBAAgBO,QAxBtD,WACf,IAAMC,EAAS,CAAC,UAAW,UAAW,UAAW,WAE3CC,EAAmBb,KAAKC,MAAMD,KAAKE,SAAWU,EAAOT,QAC3DX,EAASoB,EAAOC,IAEhB,IAAId,EAAcC,KAAKC,MAAMD,KAAKE,SAAWf,EAAOgB,QAClDb,EAAeH,EAAOY,KAiBjB,gCCrCXe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.7015f27d.chunk.js","sourcesContent":["import './App.css';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction App() {\r\n  const [quotes, setQuotes] = useState(['']);\r\n  const [randomQuote, setRandomQuote] = useState();\r\n  const [color, setColor] = useState(['#333300']);\r\n\r\n  useEffect(() => {\r\n    fetch('https://type.fit/api/quotes')\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      setQuotes(data)\r\n      let randomIndex = Math.round(Math.random() * data.length);\r\n      setRandomQuote(data[randomIndex]);\r\n    })\r\n  }, []);\r\n\r\n  const newQuote = () => {\r\n    const colors = [\"#800000\", \"#660066\", \"#993300\", \"#003399\"];\r\n\r\n    const randomColorIndex = Math.round(Math.random() * colors.length);\r\n    setColor(colors[randomColorIndex])\r\n\r\n    let randomIndex = Math.round(Math.random() * quotes.length);\r\n      setRandomQuote(quotes[randomIndex]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"behined\" style={{background: color}}>\r\n    <div className=\"App\" >\r\n        {randomQuote ? (\r\n          <div className=\"quote-elements\">\r\n            <h3  style={{color: color}}>\"{randomQuote.text}\"</h3>\r\n            <p style={{color: color}} className=\"author\">- {randomQuote.author || 'Unknown author'}</p>\r\n          </div>\r\n        ) : (<h2>Loading...</h2>)}\r\n         <div className=\"buttons\">\r\n           <div className=\"media-buttons\">\r\n              <a target=\"_blank\" style={{background: color}} className=\"btn btn-default\" href=\"https://twitter.com/intent/tweet?\"><i className=\"fa fa-twitter\"></i></a>\r\n              <a target=\"_blank\" style={{background: color}} className=\"btn btn-default\" href=\"https://www.tumblr.com/login?\"><i className=\"fa fa-tumblr\"></i></a>\r\n            </div>\r\n           <button style={{background: color}} className=\"new-quote-btn\" onClick={newQuote}>New Quote</button>\r\n        </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}